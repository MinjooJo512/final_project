# 상품후기 더보기 링크 추가
df['review URL'] = df['URL'].str.replace('/app/goods/', '/review/goods/')
df.to_csv('outer.csv', index=False)
df

# 별점, 리뷰 크롤링 (100~1000개)  <- 상품 200개
for i in range(20, 22):  # 3(19개 <100개 미만), 16(2,084개), 20(후기 x)
    star_review_list = []
    
    # i번째 상품의 리뷰 크롤링  
    driver = webdriver.Chrome()
    driver.implicitly_wait(2)
    driver.get(df['review URL'].iloc[i])
    time.sleep(1)
    html = driver.page_source
    soup = BeautifulSoup(html, 'lxml')
    time.sleep(2)
    
    # 리뷰 개수 추출
    review_num_texts = driver.find_element(By.CSS_SELECTOR, 'div.sc-fulBNO > span.text-title_18px_med').text   # 상품후기(~~) 추출

    r = re.compile('\(([^)]+)')
    num_texts = r.findall(review_num_texts)  # 괄호 안 문자 추출  <- ['19'] or ['2,084']
    num_str = ''.join(num_texts)          # 리스트를 문자열(str)로 변환  <- 19 or 2,084
    
    try:        # 후기 있을 때
        review_num = int(re.sub(r',', '', num_str))  # 콤마 제거 후 int형으로 변환   <- 19 or 2084
    except:     # 후기 없을 때
        print(f'{i}번째 상품의 리뷰 없음. (0개, 크롤링 X)')
        driver.quit()

    if review_num < 100:    # 리뷰개수 100개 미만은 크롤링 x
        print(f"{i}번째 상품의 리뷰 개수: {review_num}개 (100개 미만, 크롤링 X)")
        driver.quit()
        break
    else:                   # 리뷰개수 100개 이상 크롤링
        try:    # 후기 없는데 리뷰 읽으려고 해서 review_list 부분에서 에러남 => try-except 예외처리
            # 스크롤 내리기 전 리뷰 개수
            review_list = driver.find_elements(By.CSS_SELECTOR, 'ul.sc-bVHBsO > div > div > div > div')
            before_len = len(review_list)
    
            # 현재 페이지 높이
            present_height = driver.execute_script("return document.body.scrollHeight")
            
            # 무한스크롤 (1000개 될 때까지)
            while before_len < 1000:
                # 스크롤 내리기
                driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
                time.sleep(1)  # 스크롤 후 대기
                scroll_height = driver.execute_script("return document.body.scrollHeight")   # 스크롤 후 페이지 높이
            
                if present_height == scroll_height:   # 더이상 스크롤 내려가지 않으면, 무한스크롤 멈춤
                    break
            
                present_height = scroll_height
            
                html = driver.page_source
                soup = BeautifulSoup(html, 'lxml')
                time.sleep(2)
            
                # 스크롤 내린 후 리뷰 개수
                review_list = driver.find_elements(By.CSS_SELECTOR, 'ul.sc-bVHBsO > div > div > div > div')
                after_len = len(review_list)
            
                # print('-'*60)
                # print("Before: {}, After: {}".format(before_len, after_len))
                
                before_len = after_len
            
                try:
                    # 스크롤 내린 후 별점들
                    star_selectors = driver.find_elements(By.CSS_SELECTOR, 'a.sc-bbSYpP div.sc-tafSX span.text-body_14px_semi.font-pretendard')
                    
                    # 스크롤 내린 후 리뷰들
                    review_selectors = driver.find_elements(By.CSS_SELECTOR, 'a.sc-bbSYpP div.sc-feUYzb p.text-body_13px_reg')
                    
                    for star_selector, review_selector in zip(star_selectors, review_selectors):
                        star_text = star_selector.text
                        review_text = review_selector.text
            
                        review_text = review_text.replace('\n\n', ' ')
                        review_text = review_text.replace('\n', ' ')
                        # print(f'별점: {star_text} / 후기: {review_text}')
                    
                        star_review_list.append({"Star":star_text, "Review": review_text})
                except:
                    print("Element not found")
            
                # 1000개까지만 리뷰 수집
                star_review_lst = []   # 중복되는 리뷰 제거
                for star_review in star_review_list:
                    if star_review not in star_review_lst:
                        star_review_lst.append(star_review)
                
                if len(star_review_lst) >= 1000:
                    break
    
            print(f'{i}번째 상품 크롤링 완료')
            driver.quit()
    
            star_review_df = pd.DataFrame(star_review_lst, columns=["Star", "Review"])
            star_review_df.to_csv(f'{i}. star, review(outer).csv', index=False)
        except:
            pass

# star_review_df
